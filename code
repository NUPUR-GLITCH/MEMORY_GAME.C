#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#define SIZE 4 // 4x4 grid

void initializeBoard(int board[SIZE][SIZE]);
void shuffleBoard(int board[SIZE][SIZE]);
void printBoard(int board[SIZE][SIZE], int revealed[SIZE][SIZE]);
int isMatch(int guess1[2], int guess2[2], int board[SIZE][SIZE]);
int isBoardFull(int revealed[SIZE][SIZE]);
int main() {
int board[SIZE][SIZE];
int revealed[SIZE][SIZE] = {0}; // 0 for hidden, 1 for revealed
int turns = 0;
int guess1[2], guess2[2];
srand(time(0)); // Seed for random number generation
initializeBoard(board);
shuffleBoard(board);
while (!isBoardFull(revealed)) {
printBoard(board, revealed);
printf("Turn %d: Enter the coordinates of the first card (row and column): ", turns + 1);
scanf("%d %d", &guess1[0], &guess1[1]);
guess1[0]--; guess1[1]--; // Adjust for 0-indexing
printf("Enter the coordinates of the second card (row and column): ");
scanf("%d %d", &guess2[0], &guess2[1]);
guess2[0]--; guess2[1]--; // Adjust for 0-indexing
if (isMatch(guess1, guess2, board)) {
printf("It's a match!\n");
revealed[guess1[0]][guess1[1]] = 1;
revealed[guess2[0]][guess2[1]] = 1;
} else {
printf("Not a match! Try again.\n");
}
turns++;
}
printf("Congratulations! You've matched all pairs in %d turns.\n", turns);
return 0;
}

void initializeBoard(int board[SIZE][SIZE]) {
int numPairs = (SIZE * SIZE) / 2;
int count = 1;

for (int i = 0; i < SIZE; i++) {
for (int j = 0; j < SIZE; j++) {
board[i][j] = (count <= numPairs) ? count : count - numPairs;
if (j % 2 == 1) count++; // Increment after filling pairs
}
}
}

void shuffleBoard(int board[SIZE][SIZE]) {
for (int i = 0; i < SIZE; i++) {
for (int j = 0; j < SIZE; j++) {
int r1 = rand() % SIZE;
int r2 = rand() % SIZE;
// Swap
int temp = board[i][j];
board[i][j] = board[r1][r2];
board[r1][r2] = temp;
}
}
}
void printBoard(int board[SIZE][SIZE], int revealed[SIZE][SIZE]) {
printf("Current Board:\n");
for (int i = 0; i < SIZE; i++) {
for (int j = 0; j < SIZE; j++) {
if (revealed[i][j]) {
printf("%d ", board[i][j]);
} else {
printf("X "); // X for hidden cards
}
}
printf("\n");
}
}

int isMatch(int guess1[2], int guess2[2], int board[SIZE][SIZE]) {
return board[guess1[0]][guess1[1]] == board[guess2[0]][guess2[1]];
}

int isBoardFull(int revealed[SIZE][SIZE]) {
for (int i = 0; i < SIZE; i++) {
for (int j = 0; j < SIZE; j++) {
if (revealed[i][j] == 0) {
return 0; // Not full yet
}
}
}
return 1; // Board is full
}
